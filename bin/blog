#!/bin/sh
set -e
EDITOR=${EDITOR:="vi"}
BLOGHOST=${BLOGHOST:="http://localhost:5000"}
USERNAME=${USERNAME:="test"}
PASSWORD=${PASSWORD:="test"}

if [ $# -lt 1 ]
then
        echo "Usage : $0 (new|list|edit|destroy)"
        echo "Current host: ${BLOGHOST}, editor: ${EDITOR}, user: ${USERNAME}"
        exit
fi


function mdtemp()
{
  local tempfile=$(mktemp -t blog)
  local mdtemp="${tempfile}.md"
  mv $tempfile $mdtemp
  echo "$mdtemp"
}

function uploadscript()
{
  if [ -z "${UPLOAD_SCRIPT}" ]; then
    echo ""
  else
    echo "${UPLOAD_SCRIPT}"
  fi
}

function douploads()
{
  local script="$(uploadscript)"
  if [ -n script ]; then
    LOCAL_FILES=$(echo "<div>" `markdown ${1}` "</div>" | \
                          xmlstarlet sel -t -v "//*/@href" -n -v "//*/@src" | \
                          xargs -I{} sh -c "[ -f {} ] && echo '{}'" | \
                          sort | \
                          uniq)
    echo "${LOCAL_FILES}" | $script | ruby -ne "local, remote = \$_.chomp.split(/:/); c = nil; File.open('${1}', 'r+') { |f| c = f.read.to_s.gsub(local, remote); f.rewind; f.write(c) }; puts(remote)"  # sorry
  else
    return 0
  fi
}

case "$1" in
  "new") TEMPFILE=$(mdtemp)
         $EDITOR $TEMPFILE && \
           [ -s $TEMPFILE ] && \
           douploads $TEMPFILE && \
           curl -f -vvvv --user "${USERNAME}:${PASSWORD}" --data-binary "@${TEMPFILE}" "${BLOGHOST}/post" && \
           rm $TEMPFILE
         ;;
  "list") curl -H "Accept: text/csv" "${BLOGHOST}/index"
          ;;
  "edit") TEMPFILE=$(mdtemp)
          curl -f -o $TEMPFILE -H "Accept: text/markdown" "${BLOGHOST}/post/${2}"
          $EDITOR $TEMPFILE && \
            [ -s $TEMPFILE ] && \
            douploads $TEMPFILE && \
            curl -f --user "${USERNAME}:${PASSWORD}" --data-binary "@${TEMPFILE}" -X PUT "${BLOGHOST}/post/${2}" && \
            rm $TEMPFILE
          ;;
  "destroy") curl -f --user "${USERNAME}:${PASSWORD}" -X DELETE "${BLOGHOST}/post/${2}"
             ;;
esac

